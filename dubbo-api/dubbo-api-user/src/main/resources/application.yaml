# spring
spring:
  application:
    name: &application_name dubbo-api-user
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  threads:
    virtual:
      enabled: true
  lifecycle:
    timeout-per-shutdown-phase: 60s
  data:
    # redis
    redis:
      database: 2
      host: 127.0.0.1
      port: 6379
      client-type: lettuce
      lettuce:
        pool:
          enabled: true
          max-active: 1
  boot:
    admin:
      client:
        url: http://127.0.0.1:7060
  messages:
    basename: i18n.message
  session:
    timeout: 1800s
  kafka:
    bootstrap-servers: 127.0.01:9092
    producer:
      acks: all
      retries: 3
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 1024
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: *application_name
      max-poll-records: 100
      auto-offset-reset: earliest
#server
server:
  port: 7072
  servlet:
    context-path: /user
  tomcat:
    accept-count: 10
    threads:
      max: 200
      min-spare: 50
  error:
    path: /liyz/error
  shutdown: graceful
# log
logging:
  pattern:
  file:
    name: '\srv\logs\${spring.application.name}\${spring.application.name}.log'
#    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} %clr(%-5level) %clr(${PID:-}){magenta} %clr([%t]){faint} %clr([%F:%L]){cyan} %clr(:){faint} %m%n%throwable'
# dubbo
dubbo:
  application:
    name: *application_name
    qos-enable: false
  protocol:
    port: 20772
    threads: 200
  provider:
    filter: remoteServiceExceptionFilter,-exception
    version: 1.0.0
  consumer:
    version: 1.0.0
    check: false
    cluster: failfast
    timeout: 60000
    validation: jvalidationNew
  registry:
    timeout: 5000
    address: nacos://localhost:8848?namespace=liyz
  metadata-report:
    address: nacos://localhost:8848?namespace=liyz
# rocket mq
rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    group: *application_name
    enable-msg-trace: true
# springdoc
springdoc:
  default-flat-param-object: true
  api-docs:
    path: /v3/api-docs
    enabled: true
  group-configs:
    - group: all
      display-name: 所有接口
      paths-to-match:
        - /**
      packages-to-scan:
        - com.liyz.boot3.api.user.controller
    - group: test
      display-name: 测试
      paths-to-match:
        - /**
      packages-to-scan:
        - com.liyz.boot3.api.user.controller.test
    - group: user
      display-name: 用户
      paths-to-match:
        - /**
      packages-to-scan:
        - com.liyz.boot3.api.user.controller.user
    - group: search
      display-name: 搜索
      paths-to-match:
        - /**
      packages-to-scan:
        - com.liyz.boot3.api.user.controller.search
    - group: authen
      display-name: 鉴权
      paths-to-match:
        - /**
      packages-to-scan:
        - com.liyz.boot3.api.user.controller.authen
# knife4j
knife4j:
  enable: true
  setting:
    language: zh_cn
    swagger-model-name: 实体类列表
  basic:
    username: abc
    password: 123
    enable: false
auth:
  advice:
    enable: true
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
# ssc
ssc:
  base-url: https://openapi.sscha.com
  auth-header: Authorization
  auth-value: 736fe7a1-6bc4-4663-b1f3-fc99aa1af2b0
